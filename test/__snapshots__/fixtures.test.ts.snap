// Vitest Snapshot v1

exports[`fixtures > async > stdout 1`] = `"works"`;

exports[`fixtures > circular > stdout 1`] = `"FooBar"`;

exports[`fixtures > error-parse > stderr 1`] = `
"<root>/lib/index.js:2
  throw err /* ↓ Check stack trace ↓ */
  ^

Error: ParseError: \`import\` can only be used in \`import 
 <cwd>/index.ts
    at Object.<anonymous> (<root>/bin/jiti)
    at Module._compile (internal/modules/cjs/loader)
    at Object.Module._extensions..js (internal/modules/cjs/loader)
    at Module.load (internal/modules/cjs/loader)
    at Function.Module._load (internal/modules/cjs/loader)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main)
    at internal/main/run_main_module"
`;

exports[`fixtures > error-parse > stdout 1`] = `""`;

exports[`fixtures > error-runtime > stderr 1`] = `
"<root>/lib/index.js:2
  throw err /* ↓ Check stack trace ↓ */
  ^

TypeError [ERR_INVALID_ARG_TYPE]: The \\"listener\\" argument must be of type function. Received undefined
    at checkListener (events)
    at _addListener (events)
    at process.addListener (events)
    at <cwd>/index.ts
    at jiti (<root>/dist/jiti)
    at Object.<anonymous> (<root>/bin/jiti)
    at Module._compile (internal/modules/cjs/loader)
    at Object.Module._extensions..js (internal/modules/cjs/loader)
    at Module.load (internal/modules/cjs/loader)
    at Function.Module._load (internal/modules/cjs/loader) {
  code: 'ERR_INVALID_ARG_TYPE'
}"
`;

exports[`fixtures > error-runtime > stdout 1`] = `""`;

exports[`fixtures > esm > stdout 1`] = `
"{
  file: '<cwd>/test.js',
  dir: '<cwd>',
  'import.meta.url': 'file://<cwd>/test.js',
  stack: [
    'at getStack (<cwd>/test)',
    'at test (<cwd>/test)',
    'at <cwd>/index.js',
    'at jiti (<root>/dist/jiti)',
    'at Object.<anonymous> (<root>/bin/jiti)',
    'at Module._compile (internal/modules/cjs/loader)',
    'at Object.Module._extensions..js (internal/modules/cjs/loader)',
    'at Module.load (internal/modules/cjs/loader)',
    'at Function.Module._load (internal/modules/cjs/loader)',
    'at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main)'
  ]
}"
`;

exports[`fixtures > exotic > stdout 1`] = `
"Typescript: [
  'ShimCollections',      'versionMajorMinor',  'version',
  'Comparison',           'Map',                'Set',
  'getIterator',          'emptyArray',         'emptyMap',
  'emptySet',             'length',             'forEach',
  'forEachRight',         'firstDefined',       'firstDefinedIterator',
  'reduceLeftIterator',   'zipWith',            'zipToIterator',
  'zipToMap',             'intersperse',        'every',
  'find',                 'findLast',           'findIndex',
  'findLastIndex',        'findMap',            'contains',
  'arraysEqual',          'indexOfAnyCharCode', 'countWhere',
  'filter',               'filterMutate',       'clear',
  'map',                  'mapIterator',        'sameMap',
  'flatten',              'flatMap',            'flatMapToMutable',
  'flatMapIterator',      'sameFlatMap',        'mapAllOrFail',
  'mapDefined',           'mapDefinedIterator', 'mapDefinedEntries',
  'mapDefinedValues',     'getOrUpdate',        'tryAddToSet',
  'emptyIterator',        'singleIterator',     'spanMap',
  'mapEntries',           'some',               'getRangesWhere',
  'concatenate',          'indicesOf',          'deduplicate',
  'createSortedArray',    'insertSorted',       'sortAndDeduplicate',
  'arrayIsSorted',        'arrayIsEqualTo',     'compact',
  'relativeComplement',   'sum',                'append',
  'combine',              'addRange',           'pushIfUnique',
  'appendIfUnique',       'sort',               'arrayIterator',
  'arrayReverseIterator', 'stableSort',         'rangeEquals',
  'elementAt',            'firstOrUndefined',   'first',
  'lastOrUndefined',      'last',               'singleOrUndefined',
  'singleOrMany',         'replaceElement',     'binarySearch',
  'binarySearchKey',      'reduceLeft',         'hasProperty',
  'getProperty',          'getOwnKeys',         'getAllKeys',
  'getOwnValues',         'getEntries',         'arrayOf',
  'arrayFrom',            'assign',             'equalOwnProperties',
  'arrayToMap',           'arrayToNumericMap',  'arrayToMultiMap',
  'group',
  ... 2368 more items
]"
`;

exports[`fixtures > hashbang > stdout 1`] = `"1"`;

exports[`fixtures > import-map > stdout 1`] = `"{ alias: 'alias' }"`;

exports[`fixtures > legacy > stdout 1`] = `"Should be undefined: undefined"`;

exports[`fixtures > mixed > stdout 1`] = `"Mixed works for: <cwd>"`;

exports[`fixtures > native > stdout 1`] = `"[Module: null prototype] { default: { hasRequire: false } }"`;

exports[`fixtures > proto > stdout 1`] = `"exists: true"`;

exports[`fixtures > pure-esm-dep > stdout 1`] = `
"Enter Program
Enter VariableDeclaration
Enter VariableDeclarator
Enter Identifier
Enter Literal"
`;

exports[`fixtures > typescript > stdout 1`] = `
"{
  file: '<cwd>/test.ts',
  dir: '<cwd>',
  resolve: '<cwd>/test.ts'
}"
`;
